Инструкция
Улучшите написанный на 5 уроке магазин: реализуйте возможность добавлять/удалять товар,
а также добавьте работу с ошибками.

Теперь массив товаров будет не размера 7, а произвольного размера,
который будет передаваться в конструктор магазину (нужно реализовать такой конструктор,
принимающий аргумент с максимальным размером и создающий такой массив).
Это будет максимальный размер магазина, его вместительность (под это число стоит завести
отдельное поле в магазине). Также теперь нужно будет в отдельном поле поддерживать текущее количество
 товаров в наличии (удобно, что это также будет индекс первой свободной позиции в массиве).
 Изначально магазин пустой, то есть в массиве нет никаких товаров и текущий размер магазина равен 0.

Нужно реализовать следующую функциональность:
- addProduct(product) - добавляет переданный в параметре товар в магазин (записывает в первую незанятую
ячейку массива). Если перед добавлением товара магазин уже полностью заполнен и свободного места нет, товар
не должен добавляться и должно бросаться исключение.
- deleteProduct(name) - удаляет из магазина товар с заданным именем (в массиве ищется этот товар, удаляется,
 а все товары записанные в массиве правее должны съехать на один влево так, чтобы все имеющиеся товары
 всегда образовывали непрерывный отрезок массива). Если товара с запрашиваемым именем нет в магазине,
 должно бросаться исключение.
- size() - возвращает текущий размер магазина, то есть текущее количество товаров в нем.

Реализуйте свое собственное исключение, встроив его в иерархию исключений Java, которое вы будете бросать
 в методах, перечисленных выше. Подумайте, сделать его проверяемым или нет.

Продумайте для всех методов типы возвращаемых значений и типы параметров.
Для всех полей и методов решите делать их статическими или нестатическими, определите подходящие по смыслу
модификаторы доступа. Придуманные вами названия классов, полей и методов должны по смыслу отвечать содержимому.